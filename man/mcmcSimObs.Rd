% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcmcSimObs.R
\name{mcmcSimObs}
\alias{mcmcSimObs}
\title{Bayesian MCMC Observed Values Predicted Probablities}
\usage{
mcmcSimObs(formula, data, xinterest, sims, simout = 10, link = "logit",
  ci = c(0.025, 0.975))
}
\arguments{
\item{formula}{tbd}

\item{data}{tbd}

\item{xinterest}{name of the explanatory variable for which to calculate 
associated Pr(y = 1).}

\item{sims}{MCMC object generated by R2jags, rjags, R2WinBUGS, R2OpenBUGS, 
MCMCpack, rstan, rstanarm. Currently only jags object is supported.}

\item{simout}{tbd}

\item{link}{link function, character vector set to "logit" (default) or "probit"}

\item{ci}{the bounds of the credible interval. Default is 0.05 and 0.95. 
Enter as a vector, such as c(0.05, 0.95).}
}
\value{
This function returns a matrix with 4 columns:
\itemize{
\item predictor: identical to x_range
\item median_pp: median predicted probability at given x
\item lower_pp: lower bound of credible interval of predicted probability at given x
\item upper_pp: upper bound of credible interval of predicted probability at given x
}
}
\description{
Implements R function to calculate the predicted probabilities
for "observed" cases after a Bayesian logit or probit model, following
Hanmer & Kalkan (2013) <doi: 10.1111/j.1540-5907.2012.00602.x>.
}
\details{
This function calculates predicted probabilities for 
"observed" cases after a Bayesian logit or probit model
following Hanmer & Kalkan (2013) <doi: 10.1111/j.1540-5907.2012.00602.x>.
}
\examples{
\donttest{
  ## simulating data
  set.seed(123456)
  b0 <- 0.2 # true value for the intercept
  b1 <- 0.5 # true value for first beta
  b2 <- 0.7 # true value for second beta
  n <- 500 # sample size
  X1 <- runif(n, -1, 1)
  X2 <- runif(n, -1, 1)
  Z <- b0 + b1 * X1 + b2 * X2
  pr <- 1 / (1 + exp(-Z)) # inv logit function
  Y <- rbinom(n, 1, pr) 
  data <- data.frame(cbind(X1, X2, Y))
  
  ## formatting the data for jags
  datjags <- as.list(data)
  datjags$N <- length(datjags$Y)
  
  ## creating jags model
  model <- function()  {
  
  for(i in 1:N){
    Y[i] ~ dbern(p[i])  ## Bernoulli distribution of y_i
    logit(p[i]) <- mu[i]    ## Logit link function
    mu[i] <- b[1] + 
      b[2] * X1[i] + 
      b[3] * X2[i]
  }
  
  for(j in 1:3){
    b[j] ~ dnorm(0, 0.001) ## Use a coefficient vector for simplicity
  }
  
}

params <- c("b")
inits1 <- list("b" = rep(0, 3))
inits2 <- list("b" = rep(0, 3))
inits <- list(inits1, inits2)

## fitting the model with R2jags
set.seed(123)
fit <- R2jags::jags(data = datjags, inits = inits, 
                    parameters.to.save = params, n.chains = 2, n.iter = 2000, 
                    n.burnin = 1000, model.file = model)

### observed value approach with mcmcSimObs
obs_prob_sim <- mcmcObsProb(formula = Y ~ X1 + X2,
                        data = data,
                        xinterest = c("X1"),
                        sims = fit)
}
}
\references{
Hanmer, M. J., & Ozan Kalkan, K. (2013). Behind the curve: Clarifying 
the best approach to calculating predicted probabilities and marginal effects from 
limited dependent variable models. American Journal of Political Science, 57(1), 
263-277.
}
